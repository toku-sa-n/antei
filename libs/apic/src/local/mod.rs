use x86_64::PhysAddr;

pub mod lvt;
pub mod timer;

pub const ID: PhysAddr = PhysAddr::new_truncate(0xffe0_0020);
pub const VERSION: PhysAddr = PhysAddr::new_truncate(0xffe0_0030);
pub const TASK_PRIORITY: PhysAddr = PhysAddr::new_truncate(0xffe0_0080);
pub const ARBITRATION_PRIORITY: PhysAddr = PhysAddr::new_truncate(0xffe0_0090);
pub const PROCESSOR_PRIORITY: PhysAddr = PhysAddr::new_truncate(0xffe0_00a0);
pub const EOI: PhysAddr = PhysAddr::new_truncate(0xffe0_00b0);
pub const REMOTE_READ: PhysAddr = PhysAddr::new_truncate(0xffe0_00c0);
pub const LOGICAL_DESTINATION: PhysAddr = PhysAddr::new_truncate(0xffe0_00d0);
pub const DESTINATION_FORMAT: PhysAddr = PhysAddr::new_truncate(0xffe0_00e0);
pub const SPURIOUS_INTERRUPT_VECTOR: PhysAddr = PhysAddr::new_truncate(0xffe0_00f0);
pub const IN_SERVICE_31_0: PhysAddr = PhysAddr::new_truncate(0xffe0_0100);
pub const IN_SERVICE_63_32: PhysAddr = PhysAddr::new_truncate(0xffe0_0110);
pub const IN_SERVICE_95_64: PhysAddr = PhysAddr::new_truncate(0xffe0_0120);
pub const IN_SERVICE_127_96: PhysAddr = PhysAddr::new_truncate(0xffe0_0130);
pub const IN_SERVICE_159_128: PhysAddr = PhysAddr::new_truncate(0xffe0_0140);
pub const IN_SERVICE_191_160: PhysAddr = PhysAddr::new_truncate(0xffe0_0150);
pub const IN_SERVICE_223_192: PhysAddr = PhysAddr::new_truncate(0xffe0_0160);
pub const IN_SERVICE_255_224: PhysAddr = PhysAddr::new_truncate(0xffe0_0170);
pub const TRIGGER_MODE_31_0: PhysAddr = PhysAddr::new_truncate(0xffe0_0180);
pub const TRIGGER_MODE_63_32: PhysAddr = PhysAddr::new_truncate(0xffe0_0190);
pub const TRIGGER_MODE_95_64: PhysAddr = PhysAddr::new_truncate(0xffe0_01a0);
pub const TRIGGER_MODE_127_96: PhysAddr = PhysAddr::new_truncate(0xffe0_01b0);
pub const TRIGGER_MODE_159_128: PhysAddr = PhysAddr::new_truncate(0xffe0_01c0);
pub const TRIGGER_MODE_191_160: PhysAddr = PhysAddr::new_truncate(0xffe0_01d0);
pub const TRIGGER_MODE_223_192: PhysAddr = PhysAddr::new_truncate(0xffe0_01e0);
pub const TRIGGER_MODE_255_224: PhysAddr = PhysAddr::new_truncate(0xffe0_01f0);
pub const INTERRUPT_REQUEST_31_0: PhysAddr = PhysAddr::new_truncate(0xffe0_0200);
pub const INTERRUPT_REQUEST_63_32: PhysAddr = PhysAddr::new_truncate(0xffe0_0210);
pub const INTERRUPT_REQUEST_95_64: PhysAddr = PhysAddr::new_truncate(0xffe0_0220);
pub const INTERRUPT_REQUEST_127_96: PhysAddr = PhysAddr::new_truncate(0xffe0_0230);
pub const INTERRUPT_REQUEST_159_128: PhysAddr = PhysAddr::new_truncate(0xffe0_0240);
pub const INTERRUPT_REQUEST_191_160: PhysAddr = PhysAddr::new_truncate(0xffe0_0250);
pub const INTERRUPT_REQUEST_223_192: PhysAddr = PhysAddr::new_truncate(0xffe0_0260);
pub const INTERRUPT_REQUEST_255_224: PhysAddr = PhysAddr::new_truncate(0xffe0_0270);
pub const ERROR_STATUS: PhysAddr = PhysAddr::new_truncate(0xffe0_0280);
pub const LVT_CORRECTED_MACHINE_CHECK_INTERRUPT: PhysAddr = PhysAddr::new_truncate(0xffe0_02f0);
pub const INTERRUPT_COMMAND_31_0: PhysAddr = PhysAddr::new_truncate(0xfee0_0300);
pub const INTERRUPT_COMMAND_63_32: PhysAddr = PhysAddr::new_truncate(0xfee0_0310);
pub const LVT_TIMER: PhysAddr = PhysAddr::new_truncate(0xfee0_0320);
pub const LVT_THERMAL_SENSOR: PhysAddr = PhysAddr::new_truncate(0xfee0_0330);
pub const LVT_PERFORMANCE_MONITORING_COUNTERS: PhysAddr = PhysAddr::new_truncate(0xfee0_0340);
pub const LVT_LINT0: PhysAddr = PhysAddr::new_truncate(0xfee0_0350);
pub const LVT_LINT1: PhysAddr = PhysAddr::new_truncate(0xfee0_0360);
pub const LVT_ERROR: PhysAddr = PhysAddr::new_truncate(0xfee0_0370);
pub const INITIAL_COUNT: PhysAddr = PhysAddr::new_truncate(0xfee0_0380);
pub const CURRENT_COUNT: PhysAddr = PhysAddr::new_truncate(0xfee0_0390);
pub const DIVIDE_CONFIGURATION: PhysAddr = PhysAddr::new_truncate(0xfee0_03e0);
